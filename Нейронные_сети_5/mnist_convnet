{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"mnist_convnet","provenance":[{"file_id":"https://github.com/keras-team/keras-io/blob/master/examples/vision/ipynb/mnist_convnet.ipynb","timestamp":1621496210826}],"collapsed_sections":[]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.0"}},"cells":[{"cell_type":"markdown","metadata":{"id":"Anc6hVzdtHSm"},"source":["# Simple MNIST convnet\n","\n","**Author:** [fchollet](https://twitter.com/fchollet)<br>\n","**Date created:** 2015/06/19<br>\n","**Last modified:** 2020/04/21<br>\n","**Description:** A simple convnet that achieves ~99% test accuracy on MNIST."]},{"cell_type":"markdown","metadata":{"id":"rvwiSKdgtHSp"},"source":["## Setup"]},{"cell_type":"code","metadata":{"id":"Vv_EmQVqtHSr","executionInfo":{"status":"ok","timestamp":1621496341319,"user_tz":-180,"elapsed":4645,"user":{"displayName":"Дмитрий Гатилов","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh0DTJTuPknlwRuD9nvY-91EHrX-nFPt5urreT9wQ=s64","userId":"11957985684084033881"}}},"source":["import numpy as np\n","from tensorflow import keras\n","from tensorflow.keras import layers"],"execution_count":1,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"IjChWHBLtHSt"},"source":["## Prepare the data"]},{"cell_type":"code","metadata":{"id":"QPpu_ryatHSv","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1621496341322,"user_tz":-180,"elapsed":4634,"user":{"displayName":"Дмитрий Гатилов","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh0DTJTuPknlwRuD9nvY-91EHrX-nFPt5urreT9wQ=s64","userId":"11957985684084033881"}},"outputId":"34164cb6-3b8a-4dd0-95f2-4edca4fe93e1"},"source":["# Model / data parameters\n","num_classes = 10\n","input_shape = (28, 28, 1)\n","\n","# the data, split between train and test sets\n","(x_train, y_train), (x_test, y_test) = keras.datasets.mnist.load_data()\n","\n","# Scale images to the [0, 1] range\n","x_train = x_train.astype(\"float32\") / 255\n","x_test = x_test.astype(\"float32\") / 255\n","# Make sure images have shape (28, 28, 1)\n","x_train = np.expand_dims(x_train, -1)\n","x_test = np.expand_dims(x_test, -1)\n","print(\"x_train shape:\", x_train.shape)\n","print(x_train.shape[0], \"train samples\")\n","print(x_test.shape[0], \"test samples\")\n","\n","\n","# convert class vectors to binary class matrices\n","y_train = keras.utils.to_categorical(y_train, num_classes)\n","y_test = keras.utils.to_categorical(y_test, num_classes)"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n","11493376/11490434 [==============================] - 0s 0us/step\n","x_train shape: (60000, 28, 28, 1)\n","60000 train samples\n","10000 test samples\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"lT2qy-uYtHSw"},"source":["## Build the model"]},{"cell_type":"code","metadata":{"id":"3hFQXaLetHSw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1621496341705,"user_tz":-180,"elapsed":5009,"user":{"displayName":"Дмитрий Гатилов","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh0DTJTuPknlwRuD9nvY-91EHrX-nFPt5urreT9wQ=s64","userId":"11957985684084033881"}},"outputId":"f1f256b5-90ac-4318-9ed1-a7b678e5c436"},"source":["model = keras.Sequential(\n","    [\n","        keras.Input(shape=input_shape),\n","        layers.Conv2D(32, kernel_size=(3, 3), activation=\"relu\"),\n","        layers.MaxPooling2D(pool_size=(2, 2)),\n","        layers.Conv2D(64, kernel_size=(3, 3), activation=\"relu\"),\n","        layers.MaxPooling2D(pool_size=(2, 2)),\n","        layers.Flatten(),\n","        layers.Dropout(0.5),\n","        layers.Dense(num_classes, activation=\"softmax\"),\n","    ]\n",")\n","\n","model.summary()"],"execution_count":3,"outputs":[{"output_type":"stream","text":["Model: \"sequential\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","conv2d (Conv2D)              (None, 26, 26, 32)        320       \n","_________________________________________________________________\n","max_pooling2d (MaxPooling2D) (None, 13, 13, 32)        0         \n","_________________________________________________________________\n","conv2d_1 (Conv2D)            (None, 11, 11, 64)        18496     \n","_________________________________________________________________\n","max_pooling2d_1 (MaxPooling2 (None, 5, 5, 64)          0         \n","_________________________________________________________________\n","flatten (Flatten)            (None, 1600)              0         \n","_________________________________________________________________\n","dropout (Dropout)            (None, 1600)              0         \n","_________________________________________________________________\n","dense (Dense)                (None, 10)                16010     \n","=================================================================\n","Total params: 34,826\n","Trainable params: 34,826\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"4_hLMlu1tHSx"},"source":["## Train the model"]},{"cell_type":"code","metadata":{"id":"KGOfDSwxtHSx","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1621496777734,"user_tz":-180,"elapsed":441031,"user":{"displayName":"Дмитрий Гатилов","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh0DTJTuPknlwRuD9nvY-91EHrX-nFPt5urreT9wQ=s64","userId":"11957985684084033881"}},"outputId":"eb04fcb6-43d7-44b6-ca76-506f40e4f35f"},"source":["batch_size = 128\n","epochs = 15\n","\n","model.compile(loss=\"categorical_crossentropy\", optimizer=\"adam\", metrics=[\"accuracy\"])\n","\n","model.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, validation_split=0.1)"],"execution_count":4,"outputs":[{"output_type":"stream","text":["Epoch 1/15\n","422/422 [==============================] - 30s 70ms/step - loss: 0.7737 - accuracy: 0.7653 - val_loss: 0.0810 - val_accuracy: 0.9778\n","Epoch 2/15\n","422/422 [==============================] - 29s 68ms/step - loss: 0.1162 - accuracy: 0.9651 - val_loss: 0.0580 - val_accuracy: 0.9843\n","Epoch 3/15\n","422/422 [==============================] - 29s 69ms/step - loss: 0.0866 - accuracy: 0.9738 - val_loss: 0.0461 - val_accuracy: 0.9885\n","Epoch 4/15\n","422/422 [==============================] - 29s 69ms/step - loss: 0.0675 - accuracy: 0.9788 - val_loss: 0.0433 - val_accuracy: 0.9880\n","Epoch 5/15\n","422/422 [==============================] - 29s 69ms/step - loss: 0.0641 - accuracy: 0.9796 - val_loss: 0.0390 - val_accuracy: 0.9893\n","Epoch 6/15\n","422/422 [==============================] - 29s 68ms/step - loss: 0.0546 - accuracy: 0.9829 - val_loss: 0.0335 - val_accuracy: 0.9915\n","Epoch 7/15\n","422/422 [==============================] - 29s 68ms/step - loss: 0.0527 - accuracy: 0.9836 - val_loss: 0.0356 - val_accuracy: 0.9898\n","Epoch 8/15\n","422/422 [==============================] - 29s 68ms/step - loss: 0.0439 - accuracy: 0.9862 - val_loss: 0.0332 - val_accuracy: 0.9915\n","Epoch 9/15\n","422/422 [==============================] - 29s 69ms/step - loss: 0.0454 - accuracy: 0.9862 - val_loss: 0.0333 - val_accuracy: 0.9913\n","Epoch 10/15\n","422/422 [==============================] - 29s 70ms/step - loss: 0.0405 - accuracy: 0.9864 - val_loss: 0.0318 - val_accuracy: 0.9913\n","Epoch 11/15\n","422/422 [==============================] - 29s 69ms/step - loss: 0.0410 - accuracy: 0.9869 - val_loss: 0.0292 - val_accuracy: 0.9917\n","Epoch 12/15\n","422/422 [==============================] - 29s 68ms/step - loss: 0.0367 - accuracy: 0.9881 - val_loss: 0.0296 - val_accuracy: 0.9923\n","Epoch 13/15\n","422/422 [==============================] - 29s 69ms/step - loss: 0.0346 - accuracy: 0.9894 - val_loss: 0.0277 - val_accuracy: 0.9938\n","Epoch 14/15\n","422/422 [==============================] - 29s 69ms/step - loss: 0.0344 - accuracy: 0.9885 - val_loss: 0.0291 - val_accuracy: 0.9922\n","Epoch 15/15\n","422/422 [==============================] - 29s 69ms/step - loss: 0.0317 - accuracy: 0.9900 - val_loss: 0.0253 - val_accuracy: 0.9930\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<tensorflow.python.keras.callbacks.History at 0x7f1bdf622350>"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"markdown","metadata":{"id":"oFf93HJ1tHSy"},"source":["## Evaluate the trained model"]},{"cell_type":"code","metadata":{"id":"hJJ8nOmWtHSy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1621496779984,"user_tz":-180,"elapsed":443275,"user":{"displayName":"Дмитрий Гатилов","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh0DTJTuPknlwRuD9nvY-91EHrX-nFPt5urreT9wQ=s64","userId":"11957985684084033881"}},"outputId":"225c2944-895b-41e6-a16e-d60c9837e65a"},"source":["score = model.evaluate(x_test, y_test, verbose=0)\n","print(\"Test loss:\", score[0])\n","print(\"Test accuracy:\", score[1])"],"execution_count":5,"outputs":[{"output_type":"stream","text":["Test loss: 0.02502315863966942\n","Test accuracy: 0.9921000003814697\n"],"name":"stdout"}]}]}